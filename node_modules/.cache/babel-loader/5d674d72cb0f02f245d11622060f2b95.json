{"ast":null,"code":"import _classCallCheck from \"/home/aakash/Documents/Aakash/Learn/React-js/streams/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/aakash/Documents/Aakash/Learn/React-js/streams/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/aakash/Documents/Aakash/Learn/React-js/streams/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/aakash/Documents/Aakash/Learn/React-js/streams/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/aakash/Documents/Aakash/Learn/React-js/streams/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/aakash/Documents/Aakash/Learn/React-js/streams/client/src/components/Streams/StreamList.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStreams } from '../../actions/index';\n\nvar StreamList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamList, _React$Component);\n\n  function StreamList() {\n    _classCallCheck(this, StreamList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(StreamList).apply(this, arguments));\n  }\n\n  _createClass(StreamList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchStreams();\n    }\n  }, {\n    key: \"renderAdmin\",\n    value: function renderAdmin(stream) {\n      if (stream.userId === this.props.currentUserId) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 14\n          },\n          __self: this\n        }, \"Edit/Delete\");\n      }\n    }\n  }, {\n    key: \"renderList\",\n    value: function renderList() {\n      var _this = this;\n\n      return this.props.streams.map(function (stream) {\n        return React.createElement(\"div\", {\n          className: \"item\",\n          key: stream.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"large middle aligned icon camera\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, stream.Title, React.createElement(\"div\", {\n          className: \"description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, stream.Description)), _this.renderAdmin(stream));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Streams\"), React.createElement(\"div\", {\n        className: \"ui celled list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, this.renderList()));\n    }\n  }]);\n\n  return StreamList;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    streams: Object.values(state.streams),\n    currentUserId: state.auth.userId\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStreams: fetchStreams\n})(StreamList);","map":{"version":3,"sources":["/home/aakash/Documents/Aakash/Learn/React-js/streams/client/src/components/Streams/StreamList.js"],"names":["React","connect","fetchStreams","StreamList","props","stream","userId","currentUserId","streams","map","id","Title","Description","renderAdmin","renderList","Component","mapStateToProps","state","Object","values","auth"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,YAAR,QAA2B,qBAA3B;;IAEMC,U;;;;;;;;;;;;;wCAEiB;AACf,WAAKC,KAAL,CAAWF,YAAX;AACH;;;gCAEWG,M,EAAQ;AAChB,UAAGA,MAAM,CAACC,MAAP,KAAkB,KAAKF,KAAL,CAAWG,aAAhC,EAA+C;AAC3C,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ;AAKH;AACJ;;;iCAGY;AAAA;;AACT,aAAO,KAAKH,KAAL,CAAWI,OAAX,CAAmBC,GAAnB,CAAuB,UAAAJ,MAAM,EAAI;AAChC,eACI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAsB,UAAA,GAAG,EAAEA,MAAM,CAACK,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAG,UAAA,SAAS,EAAC,kCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEI;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKL,MAAM,CAACM,KADZ,EAEI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACCN,MAAM,CAACO,WADR,CAFJ,CAFJ,EAQK,KAAI,CAACC,WAAL,CAAiBR,MAAjB,CARL,CADJ;AAYP,OAbM,CAAP;AAcH;;;6BAGQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiC,KAAKS,UAAL,EAAjC,CAFJ,CADJ;AAMH;;;;EA1CoBd,KAAK,CAACe,S;;AA8C/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC/B,SAAO;AACHT,IAAAA,OAAO,EAAGU,MAAM,CAACC,MAAP,CAAcF,KAAK,CAACT,OAApB,CADP;AAEHD,IAAAA,aAAa,EAAGU,KAAK,CAACG,IAAN,CAAWd;AAFxB,GAAP;AAIH,CALD;;AAQA,eAAeL,OAAO,CAACe,eAAD,EAAkB;AAAEd,EAAAA,YAAY,EAAZA;AAAF,CAAlB,CAAP,CAA2CC,UAA3C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport {fetchStreams} from '../../actions/index';\n\nclass StreamList extends React.Component {\n\n    componentDidMount(){\n        this.props.fetchStreams();\n    }\n\n    renderAdmin(stream) {\n        if(stream.userId === this.props.currentUserId) {\n            return(\n                <div>\n                    Edit/Delete\n                </div>\n            );\n        }\n    }\n\n\n    renderList() {\n        return this.props.streams.map(stream => {\n                return (\n                    <div className=\"item\" key={stream.id}>\n                        <i className=\"large middle aligned icon camera\" />\n                        <div className=\"content\">\n                            {stream.Title}\n                            <div className=\"description\">\n                            {stream.Description}\n                            </div>\n                        </div>\n                        {this.renderAdmin(stream)}\n                    </div>\n                );\n        });\n    }\n\n\n    render() {\n        return(\n            <div>\n                <h2>Streams</h2>\n                <div className=\"ui celled list\">{this.renderList()}</div>\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return { \n        streams : Object.values(state.streams),\n        currentUserId : state.auth.userId\n    };\n};\n\n\nexport default connect(mapStateToProps, { fetchStreams })(StreamList);"]},"metadata":{},"sourceType":"module"}