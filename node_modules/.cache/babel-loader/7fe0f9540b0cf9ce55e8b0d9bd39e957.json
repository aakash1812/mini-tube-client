{"ast":null,"code":"import _classCallCheck from \"/home/aakash/Documents/Aakash/Learn/React-js/streams/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/aakash/Documents/Aakash/Learn/React-js/streams/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/aakash/Documents/Aakash/Learn/React-js/streams/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/aakash/Documents/Aakash/Learn/React-js/streams/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/aakash/Documents/Aakash/Learn/React-js/streams/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/aakash/Documents/Aakash/Learn/React-js/streams/client/src/components/Streams/StreamEdit.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream, editStream } from '../../actions';\nimport StreamForm from './StreamForm'; //  'props' object can only be accessed inside StreamEdit function\n// const StreamEdit = (props) => {\n//     console.log(props);\n//     console.log(props.match.params.id);\n//     return(\n//         <div>StreamEdit</div>\n//     );\n// };\n\nvar StreamEdit =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamEdit, _React$Component);\n\n  function StreamEdit() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StreamEdit);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StreamEdit)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onSubmit = function (formValues) {\n      _this.props.editStream(_this.props.match.params.id, formValues);\n    };\n\n    return _this;\n  }\n\n  _createClass(StreamEdit, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchStream(this.props.match.params.id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.props.stream) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Edit a Stream\"), React.createElement(StreamForm, {\n        initialValues: {\n          Title: this.props.stream.Title,\n          Description: this.props.stream.Description\n        },\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return StreamEdit;\n}(React.Component); // 'state' object can only be access inside mapStateTo Props function.\n// But we need to match 'id' inside props to 'state', so as to get desired information.\n// Thus another argument of mapStateTOProps i.e. ownProps is a reference of 'props' object inside StreamEdit function\n\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    stream: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream: fetchStream,\n  editStream: editStream\n})(StreamEdit);","map":{"version":3,"sources":["/home/aakash/Documents/Aakash/Learn/React-js/streams/client/src/components/Streams/StreamEdit.js"],"names":["React","connect","fetchStream","editStream","StreamForm","StreamEdit","onSubmit","formValues","props","match","params","id","stream","Title","Description","Component","mapStateToProps","state","ownProps","streams"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,eAAxC;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEMC,U;;;;;;;;;;;;;;;;;;UAMFC,Q,GAAW,UAACC,UAAD,EAAe;AACtB,YAAKC,KAAL,CAAWL,UAAX,CAAsB,MAAKK,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA9C,EAAkDJ,UAAlD;AACH,K;;;;;;;wCANmB;AAChB,WAAKC,KAAL,CAAWN,WAAX,CAAuB,KAAKM,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACH;;;6BAMQ;AACL,UAAI,CAAC,KAAKH,KAAL,CAAWI,MAAhB,EAAuB;AACnB,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;AACD,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAKI,oBAAC,UAAD;AAAY,QAAA,aAAa,EAAE;AAACC,UAAAA,KAAK,EAAG,KAAKL,KAAL,CAAWI,MAAX,CAAkBC,KAA3B;AAAkCC,UAAAA,WAAW,EAAG,KAAKN,KAAL,CAAWI,MAAX,CAAkBE;AAAlE,SAA3B;AAA2G,QAAA,QAAQ,EAAE,KAAKR,QAA1H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,CADJ;AAUH;;;;EA1BoBN,KAAK,CAACe,S,GAkC/B;AAEA;AAEA;;;AAGA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AACzC,SACI;AAAEN,IAAAA,MAAM,EAAGK,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACT,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAX,GADJ;AAGH,CAJD;;AAMA,eAAeV,OAAO,CAACe,eAAD,EAAkB;AAACd,EAAAA,WAAW,EAAXA,WAAD;AAAcC,EAAAA,UAAU,EAAVA;AAAd,CAAlB,CAAP,CAAoDE,UAApD,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream, editStream } from '../../actions';\nimport StreamForm from './StreamForm';\n\n//  'props' object can only be accessed inside StreamEdit function\n\n\n// const StreamEdit = (props) => {\n//     console.log(props);\n//     console.log(props.match.params.id);\n//     return(\n//         <div>StreamEdit</div>\n//     );\n// };\n\nclass StreamEdit extends React.Component {\n\n    componentDidMount() {\n        this.props.fetchStream(this.props.match.params.id);\n    }\n\n    onSubmit = (formValues) =>{\n        this.props.editStream(this.props.match.params.id, formValues);\n    }\n\n    render() {\n        if (!this.props.stream){\n            return(\n                <div></div>\n            );\n        } \n        return(\n            <div>\n                <h3>Edit a Stream</h3>\n\n                {/* 'initialValues' is a property of Redux-forms */}\n\n                <StreamForm initialValues={{Title : this.props.stream.Title, Description : this.props.stream.Description}} onSubmit={this.onSubmit} />\n            </div>\n        );\n        \n    }\n\n}\n\n\n\n\n\n// 'state' object can only be access inside mapStateTo Props function.\n\n// But we need to match 'id' inside props to 'state', so as to get desired information.\n\n// Thus another argument of mapStateTOProps i.e. ownProps is a reference of 'props' object inside StreamEdit function\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return(\n        { stream : state.streams[ownProps.match.params.id] }\n    ); \n};\n\nexport default connect(mapStateToProps, {fetchStream, editStream})(StreamEdit);"]},"metadata":{},"sourceType":"module"}