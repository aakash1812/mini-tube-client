{"ast":null,"code":"import _classCallCheck from \"/home/aakash/Documents/Aakash/Learn/React-js/streams/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/aakash/Documents/Aakash/Learn/React-js/streams/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/aakash/Documents/Aakash/Learn/React-js/streams/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/aakash/Documents/Aakash/Learn/React-js/streams/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/aakash/Documents/Aakash/Learn/React-js/streams/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/aakash/Documents/Aakash/Learn/React-js/streams/client/src/components/Streams/StreamEdit.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions'; //  'props' object can only be accessed inside StreamEdit function\n// const StreamEdit = (props) => {\n//     console.log(props);\n//     console.log(props.match.params.id);\n//     return(\n//         <div>StreamEdit</div>\n//     );\n// };\n\nvar StreamEdit =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StreamEdit, _React$Component);\n\n  function StreamEdit() {\n    _classCallCheck(this, StreamEdit);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(StreamEdit).apply(this, arguments));\n  }\n\n  _createClass(StreamEdit, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(this.props);\n      this.props.fetchStream(this.props.match.params.id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.props); // if (!this.props.stream){\n      //     return(\n      //         <div>Loading...</div>\n      //     );\n      // } \n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, this.props.stream.title);\n    }\n  }]);\n\n  return StreamEdit;\n}(React.Component); // 'state' object can only be access inside mapStateTo Props function.\n// But we need to match 'id' inside props to 'state', so as to get desired information.\n// Thus another argument of mapStateTOProps i.e. ownProps is a reference of 'props' object inside StreamEdit function\n\n\nvar mapStateToProps = function mapStateToProps(state, ownProps) {\n  return {\n    streams: state.streams[ownProps.match.params.id]\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchStream: fetchStream\n})(StreamEdit);","map":{"version":3,"sources":["/home/aakash/Documents/Aakash/Learn/React-js/streams/client/src/components/Streams/StreamEdit.js"],"names":["React","connect","fetchStream","StreamEdit","console","log","props","match","params","id","stream","title","Component","mapStateToProps","state","ownProps","streams"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,eAA5B,C,CAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEMC,U;;;;;;;;;;;;;wCAEkB;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,WAAKA,KAAL,CAAWJ,WAAX,CAAuB,KAAKI,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA/C;AACH;;;6BAEQ;AACLL,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB,EADK,CAEL;AACA;AACA;AACA;AACA;;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKA,KAAL,CAAWI,MAAX,CAAkBC,KAAxB,CADJ;AAIH;;;;EAlBoBX,KAAK,CAACY,S,GA0B/B;AAEA;AAEA;;;AACA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AACzC,SACI;AAAEC,IAAAA,OAAO,EAAGF,KAAK,CAACE,OAAN,CAAcD,QAAQ,CAACR,KAAT,CAAeC,MAAf,CAAsBC,EAApC;AAAZ,GADJ;AAGH,CAJD;;AAMA,eAAeR,OAAO,CAACY,eAAD,EAAkB;AAACX,EAAAA,WAAW,EAAXA;AAAD,CAAlB,CAAP,CAAwCC,UAAxC,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream } from '../../actions';\n\n\n//  'props' object can only be accessed inside StreamEdit function\n\n\n// const StreamEdit = (props) => {\n//     console.log(props);\n//     console.log(props.match.params.id);\n//     return(\n//         <div>StreamEdit</div>\n//     );\n// };\n\nclass StreamEdit extends React.Component {\n\n    componentDidMount() {\n        console.log(this.props);\n        this.props.fetchStream(this.props.match.params.id);\n    }\n\n    render() {\n        console.log(this.props);\n        // if (!this.props.stream){\n        //     return(\n        //         <div>Loading...</div>\n        //     );\n        // } \n        return(\n            <div>{this.props.stream.title}</div>\n        );\n        \n    }\n\n}\n\n\n\n\n\n// 'state' object can only be access inside mapStateTo Props function.\n\n// But we need to match 'id' inside props to 'state', so as to get desired information.\n\n// Thus another argument of mapStateTOProps i.e. ownProps is a reference of 'props' object inside StreamEdit function\nconst mapStateToProps = (state, ownProps) => {\n    return(\n        { streams : state.streams[ownProps.match.params.id] }\n    ); \n};\n\nexport default connect(mapStateToProps, {fetchStream})(StreamEdit);"]},"metadata":{},"sourceType":"module"}