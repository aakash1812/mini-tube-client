{"ast":null,"code":"import _regeneratorRuntime from \"/home/aakash/Documents/Aakash/Learn/React-js/streams/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/aakash/Documents/Aakash/Learn/React-js/streams/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport streams from '../apis/streams';\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAM, FETCH_STREAMS, DELETE_STREAM, EDIT_STREAM } from './types';\nexport var signIn = function signIn(userId) {\n  return {\n    type: SIGN_IN,\n    payload: userId\n  };\n};\nexport var signOut = function signOut() {\n  return {\n    type: SIGN_OUT\n  };\n};\nexport var createStreams = function createStreams(formValues) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return streams.post('/streams', formValues);\n\n              case 2:\n                response = _context.sent;\n                // dispatching 'action' after getting the response\n                dispatch({\n                  type: CREATE_STREAM,\n                  payload: response.data\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/home/aakash/Documents/Aakash/Learn/React-js/streams/client/src/actions/index.js"],"names":["streams","SIGN_IN","SIGN_OUT","CREATE_STREAM","FETCH_STREAM","FETCH_STREAMS","DELETE_STREAM","EDIT_STREAM","signIn","userId","type","payload","signOut","createStreams","formValues","dispatch","post","response","data"],"mappings":";;AAAA,OAAOA,OAAP,MAAoB,iBAApB;AAEA,SAASC,OAAT,EAAkBC,QAAlB,EAA4BC,aAA5B,EAA2CC,YAA3C,EAAyDC,aAAzD,EAAwEC,aAAxE,EAAuFC,WAAvF,QAA0G,SAA1G;AAEA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,MAAD,EAAY;AAC9B,SAAO;AACHC,IAAAA,IAAI,EAAGT,OADJ;AAEHU,IAAAA,OAAO,EAAGF;AAFP,GAAP;AAIH,CALM;AASP,OAAO,IAAMG,OAAO,GAAG,SAAVA,OAAU,GAAM;AACzB,SAAO;AACHF,IAAAA,IAAI,EAAGR;AADJ,GAAP;AAGH,CAJM;AAOP,OAAO,IAAMW,aAAa,GAAG,SAAhBA,aAAgB,CAACC,UAAD,EAAgB;AACzC;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAO,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACoBf,OAAO,CAACgB,IAAR,CAAa,UAAb,EAAyBF,UAAzB,CADpB;;AAAA;AACGG,gBAAAA,QADH;AAGH;AACAF,gBAAAA,QAAQ,CAAC;AAACL,kBAAAA,IAAI,EAAGP,aAAR;AAAuBQ,kBAAAA,OAAO,EAAGM,QAAQ,CAACC;AAA1C,iBAAD,CAAR;;AAJG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAMH,CAPM","sourcesContent":["import streams from '../apis/streams';\n\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAM, FETCH_STREAMS, DELETE_STREAM, EDIT_STREAM } from './types';\n\nexport const signIn = (userId) => {\n    return {\n        type : SIGN_IN,\n        payload : userId\n    };\n};\n\n\n\nexport const signOut = () => {\n    return {\n        type : SIGN_OUT,\n    };\n};\n\n\nexport const createStreams = (formValues) => {\n    return async (dispatch) => {\n        const response = await streams.post('/streams', formValues);\n\n        // dispatching 'action' after getting the response\n        dispatch({type : CREATE_STREAM, payload : response.data});\n    };\n};"]},"metadata":{},"sourceType":"module"}