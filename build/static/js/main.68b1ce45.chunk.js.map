{"version":3,"sources":["apis/streams.js","history.js","actions/index.js","actions/types.js","components/Streams/StreamForm.js","components/Streams/StreamCreate.js","components/Modal.js","components/Streams/StreamDelete.js","components/Streams/StreamEdit.js","components/Streams/StreamList.js","components/Streams/StreamShow.js","components/GoogleAuth.js","components/Header.js","components/App.js","reducers/authReducer.js","reducers/index.js","reducers/streamReducer.js","index.js"],"names":["axios","create","baseURL","createHistory","fetchStream","id","_ref3","Object","asyncToGenerator","regenerator_default","a","mark","_callee3","dispatch","response","wrap","_context3","prev","next","streams","get","concat","sent","type","payload","data","stop","this","_x4","apply","arguments","StreamForm","renderError","_ref","touched","error","react_default","createElement","className","renderInput","formProps","meta","label","onChange","input","value","_this","onSubmit","formValues","props","handleSubmit","Field","name","component","React","Component","reduxForm","form","validate","errors","Title","Description","StreamCreate","createStreams","Streams_StreamForm","connect","_callee","getState","userId","_context","auth","post","objectSpread","history","push","_x","_x2","Modal","ReactDOM","createPortal","onClick","e","stopPropagation","title","content","actions","document","querySelector","StreamDelete","renderContent","stream","match","params","_this2","Fragment","deleteStream","Link","to","components_Modal","renderActions","state","ownProps","_ref4","_callee4","_context4","delete","_x5","StreamEdit","editStream","initialValues","_ref5","_callee5","_context5","patch","_x6","StreamList","fetchStreams","currentUserId","map","key","renderAdmin","isSignedIn","style","textAlign","renderList","renderCreate","values","_ref2","_callee2","_context2","_x3","StreamShow","GoogleAuth","onAuthChange","signIn","currentUser","getId","signOut","onSignInClick","onSignOutClick","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","console","log","listen","renderAuthButton","Header","components_GoogleAuth","App","Router","components_Header","Route","path","exact","INITIAL_STATE","combineReducers","length","undefined","action","formReducer","_","mapKeys","defineProperty","omit","composeEnhansers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","render","es","components_App"],"mappings":"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","file":"static/js/main.68b1ce45.chunk.js","sourcesContent":["import axios from 'axios';\n\n\nexport default axios.create({\n    baseURL : 'http://192.168.6.220:3001'\n});","import createHistory from 'history/createBrowserHistory';\n\nexport default createHistory();","import streams from '../apis/streams';\nimport history from '../history';\n\nimport { SIGN_IN, SIGN_OUT, CREATE_STREAM, FETCH_STREAM, FETCH_STREAMS, DELETE_STREAM, EDIT_STREAM } from './types';\n\nexport const signIn = (userId) => {\n    return {\n        type : SIGN_IN,\n        payload : userId\n    };\n};\n\n\n\nexport const signOut = () => {\n    return {\n        type : SIGN_OUT,\n    };\n};\n\n\nexport const createStreams = (formValues) => {\n    return async (dispatch, getState) => {\n        const { userId } = getState().auth;\n        const response = await streams.post('/streams', {...formValues, userId});\n\n        // dispatching 'action' after getting the response\n        dispatch({type : CREATE_STREAM, payload : response.data});\n\n        // Do some programmatic navigation to get the user back to root route \n        // i.e. once the stream gets successfully created, app will route the user back to streamList page\n\n        history.push('/');\n\n    };\n};\n\n\nexport const fetchStreams = () => {\n    return async (dispatch) => {\n        const response = await streams.get('/streams');\n\n        dispatch({type : FETCH_STREAMS, payload : response.data});\n    };\n};\n\n\nexport const fetchStream = (id) => {\n    return async (dispatch) => {\n        const response = await streams.get(`/streams/${id}`);\n        dispatch({type : FETCH_STREAM, payload : response.data});\n    };\n};\n\n\nexport const deleteStream = (id) => {\n    return async (dispatch) => {\n        await streams.delete(`/streams/${id}`);\n        dispatch({type : DELETE_STREAM, payload : id});\n        history.push('/');\n    };\n};\n\n\n\nexport const editStream = (id, formValues) => {\n    return async (dispatch) => {\n        const response = await streams.patch(`/streams/${id}`, formValues);\n        dispatch({type : EDIT_STREAM, payload : response.data});\n        history.push('/');\n    };\n};\n\n","export const SIGN_IN = 'SIGN_IN';\nexport const SIGN_OUT = 'SIGN_OUT';\nexport const CREATE_STREAM = 'CREATE_STREAM';\nexport const FETCH_STREAMS = 'FETCH_STREAMS';\nexport const FETCH_STREAM = 'FETCH_STREAM';\nexport const EDIT_STREAM = 'EDIT_STREAM';\nexport const DELETE_STREAM = 'DELETE_STREAM';\n","import React from 'react';\nimport {Field, reduxForm} from 'redux-form';\n\n\n\nclass StreamForm extends React.Component {\n\n    renderError = ({touched, error}) => {\n        if (touched && error){\n            return(\n                <div className=\"ui error message\">\n                    <div className=\"header\">\n                        {error}\n                    </div>\n                </div>\n            );\n        }\n    }\n\n\n    renderInput = (formProps) => {\n        const className = `field ${formProps.meta.error && formProps.meta.touched ? 'error': ''}`;\n        return(\n            <div className={className}>\n            <label>{formProps.label}</label>\n                <input onChange={formProps.input.onChange} value={formProps.input.value} />\n                {this.renderError(formProps.meta)}\n                {/* <div>{formProps.meta.error}</div> */}\n            </div>\n        );\n    }\n\n    onSubmit = (formValues) => {\n        // e.preventDefault();              //No longer needed\n\n        // formValues can be now directly used for validation, saving to any APIs, etc.\n        // Thus its better method and avoid useless handling of 'event'. \n\n        // console.log(formValues);\n\n        this.props.onSubmit(formValues);\n\n\n    }\n\n    render() {\n        return(\n            <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form error\">\n\n            {/* 'handleSubmit' is a callback method provided to component by the Redux-form. We then pass our callback method (onSubmit) to this function.\n            Behind the scenes 'handleSubmit' automatically gets access to 'event' and automatically call 'e.preventDefault()'. Thus there is no need to \n            even call onSubmit function with event (i.e. onSubmit(e)) instead its going to be called with the values which we have inside our 'Field' inputs. */}\n\n            {/* Field (by default) in case of extra input like 'label' automatically pass it as a prop to renderInput function.\n                This makes label access by 'formProps'. */}\n\n                <Field name='Title' component={this.renderInput} label=\"Enter Title\"/>\n                <Field name='Description' component={this.renderInput} label=\"Enter Description\"/>\n\n                <button className=\"ui button primary\">Submit</button>\n            </form>\n        );\n    }\n}\n\n\nconst validate = (formValues) => {\n    const errors = {};\n\n    if(!formValues.Title) {\n        errors.Title = \"Form must have a Title\";\n    }\n\n    if(!formValues.Description) {\n        errors.Description = \"Form must have a Description\";\n    }\n\n    return errors;\n};\n\n\nexport default reduxForm({form : 'streamForm', validate})(StreamForm);\n\n","// import React from 'react';\n// import {Field, reduxForm} from 'redux-form';\n// import { connect } from 'react-redux';\n// import { createStreams } from '../../actions';\n\n\n// class StreamCreate extends React.Component {\n\n//     renderError = ({touched, error}) => {\n//         if (touched && error){\n//             return(\n//                 <div className=\"ui error message\">\n//                     <div className=\"header\">\n//                         {error}\n//                     </div>\n//                 </div>\n//             );\n//         }\n//     }\n\n\n//     renderInput = (formProps) => {\n//         const className = `field ${formProps.meta.error && formProps.meta.touched ? 'error': ''}`;\n//         return(\n//             <div className={className}>\n//             <label>{formProps.label}</label>\n//                 <input onChange={formProps.input.onChange} value={formProps.input.value} />\n//                 {this.renderError(formProps.meta)}\n//                 {/* <div>{formProps.meta.error}</div> */}\n//             </div>\n//         );\n//     }\n\n//     onSubmit = (formValues) => {\n//         // e.preventDefault();              //No longer needed\n\n//         // formValues can be now directly used for validation, saving to any APIs, etc.\n//         // Thus its better method and avoid useless handling of 'event'. \n\n//         // console.log(formValues);\n\n//         this.props.createStreams(formValues);\n\n\n//     }\n\n//     render() {\n//         return(\n//             <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"ui form error\">\n\n//             {/* 'handleSubmit' is a callback method provided to component by the Redux-form. We then pass our callback method (onSubmit) to this function.\n//             Behind the scenes 'handleSubmit' automatically gets access to 'event' and automatically call 'e.preventDefault()'. Thus there is no need to \n//             even call onSubmit function with event (i.e. onSubmit(e)) instead its going to be called with the values which we have inside our 'Field' inputs. */}\n\n//             {/* Field (by default) in case of extra input like 'label' automatically pass it as a prop to renderInput function.\n//                 This makes label access by 'formProps'. */}\n\n//                 <Field name='Title' component={this.renderInput} label=\"Enter Title\"/>\n//                 <Field name='Description' component={this.renderInput} label=\"Enter Description\"/>\n\n//                 <button className=\"ui button primary\">Submit</button>\n//             </form>\n//         );\n//     }\n// }\n\n\n// const validate = (formValues) => {\n//     const errors = {};\n\n//     if(!formValues.Title) {\n//         errors.Title = \"Form must have a Title\";\n//     }\n\n//     if(!formValues.Description) {\n//         errors.Description = \"Form must have a Description\";\n//     }\n\n//     return errors;\n// };\n\n\n// const formWrapped = reduxForm({form : 'streamCreate', validate})(StreamCreate);\n\n// export default connect(null, { createStreams })(formWrapped);\n\n//#######################################################################################################################################################\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createStreams } from '../../actions';\nimport StreamForm from './StreamForm';\n\n\nclass StreamCreate extends React.Component {\n\n    onSubmit = (formValues) => {\n        this.props.createStreams(formValues);\n    }\n\n    render() {\n        return(\n            <div>\n                <h3>Create a Stream</h3>\n                <StreamForm onSubmit={this.onSubmit} />\n            </div>\n        );\n    }\n}\n\n\nexport default connect(null, { createStreams })(StreamCreate);\n \n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport history from '../history';\n\n\nconst Modal = props => {\n    return ReactDOM.createPortal(\n        <div onClick={() => history.push('/')} className=\"ui dimmer modals visible active\">\n            <div onClick={(e) => e.stopPropagation()} className=\"ui standard modal visible active\">\n                <div className=\"header\">{props.title}</div>\n                <div className=\"content\">{props.content}</div>\n                <div className=\"actions\">\n                        {props.actions}\n                </div>\n            </div>\n        </div>, \n        document.querySelector('#modal')\n    );\n}\n\nexport default Modal;","import React from 'react';\nimport Modal from '../Modal';\nimport { connect } from 'react-redux';\nimport { fetchStream, deleteStream } from '../../actions';\nimport { Link } from 'react-router-dom';\n\n\nclass StreamDelete extends React.Component {\n\n    renderContent = () => {\n        if (!this.props.stream){\n            return \"Are you sure you want to delete this stream :\"\n        }\n\n        return `Are you sure you want to delete this stream : ${this.props.stream.title}`\n    }\n\n    componentDidMount() {\n        this.props.fetchStream(this.props.match.params.id);\n    }\n\n    renderActions() {\n        return (\n            <React.Fragment>\n                <button onClick={() => this.props.deleteStream(this.props.match.params.id)} className=\"ui primary button\">Delete</button>\n                <Link to='/' className=\"ui button\">Cancel</Link>\n            </React.Fragment>  \n        );\n    }\n\n    render() {\n        return(\n            <div>\n                <Modal \n                    title=\"Delete Stream\"\n                    content={this.renderContent()}\n                    actions={this.renderActions()}\n                />\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    return(\n        {\n            stream : state.streams[ownProps.match.params.id]\n        }\n    );\n}\n\nexport default connect(mapStateToProps, {fetchStream, deleteStream})(StreamDelete);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchStream, editStream } from '../../actions';\nimport StreamForm from './StreamForm';\n\n//  'props' object can only be accessed inside StreamEdit function\n\n\n// const StreamEdit = (props) => {\n//     console.log(props);\n//     console.log(props.match.params.id);\n//     return(\n//         <div>StreamEdit</div>\n//     );\n// };\n\nclass StreamEdit extends React.Component {\n\n    componentDidMount() {\n        this.props.fetchStream(this.props.match.params.id);\n    }\n\n    onSubmit = (formValues) =>{\n        this.props.editStream(this.props.match.params.id, formValues);\n    }\n\n    render() {\n        if (!this.props.stream){\n            return(\n                <div></div>\n            );\n        } \n        return(\n            <div>\n                <h3>Edit a Stream</h3>\n\n                {/* 'initialValues' is a property of Redux-forms */}\n\n                <StreamForm initialValues={{Title : this.props.stream.Title, Description : this.props.stream.Description}} onSubmit={this.onSubmit} />\n            </div>\n        );\n        \n    }\n\n}\n\n\n\n\n\n// 'state' object can only be access inside mapStateTo Props function.\n\n// But we need to match 'id' inside props to 'state', so as to get desired information.\n\n// Thus another argument of mapStateTOProps i.e. ownProps is a reference of 'props' object inside StreamEdit function\n\n\nconst mapStateToProps = (state, ownProps) => {\n    return(\n        { stream : state.streams[ownProps.match.params.id] }\n    ); \n};\n\nexport default connect(mapStateToProps, {fetchStream, editStream})(StreamEdit);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport {fetchStreams} from '../../actions/index';\n\nclass StreamList extends React.Component {\n\n    componentDidMount(){\n        this.props.fetchStreams();\n    }\n\n    renderAdmin(stream) {\n        if(stream.userId === this.props.currentUserId) {\n            return(\n                <div className=\"right floated content\">\n                    <Link to={`/streams/edit/${stream.id}`} className=\"ui button primary\">Edit</Link>\n                    <Link to={`/streams/delete/${stream.id}`} className=\"ui button negative\">Delete</Link>\n                </div>\n            );\n        }\n    }\n\n\n    renderList() {\n        return this.props.streams.map(stream => {\n                return (\n                    <div className=\"item\" key={stream.id}>\n                      {this.renderAdmin(stream)}\n                        <i className=\"large middle aligned icon camera\" />\n                        <div className=\"content\">\n                            {stream.Title}\n                            <div className=\"description\">\n                            {stream.Description}\n                            </div>\n                        </div>\n                      \n                    </div>\n                );\n        });\n    }\n\n\n\n    renderCreate() {\n        if(this.props.isSignedIn) {\n            return(\n                <div style={{ textAlign: 'right' }}>\n                    <Link to=\"/streams/new\" className=\"ui button primary\">\n                        Create Stream\n                    </Link>\n                </div>\n            );\n        }\n    }\n\n\n    render() {\n        return(\n            <div>\n                <h2>Streams</h2>\n                <div className=\"ui celled list\">{this.renderList()}</div>\n                {this.renderCreate()}\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return { \n        streams : Object.values(state.streams),\n        currentUserId : state.auth.userId,\n        isSignedIn : state.auth.isSignedIn\n    };\n};\n\n\nexport default connect(mapStateToProps, { fetchStreams })(StreamList);","import React from 'react';\n\nconst StreamShow = () => {\n    return(\n        <div>StreamShow</div>\n    );\n};\n\nexport default StreamShow;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signOut } from '../actions';\n\nclass GoogleAuth extends React.Component {\n\n    componentDidMount() {\n        window.gapi.load('client:auth2', () =>{\n            window.gapi.client.init({\n                // clientId:'144062268697-tbkvqjghrnnpd6q63qbcb74mgqqgb6lf.apps.googleusercontent.com',\n                clientId:'547149568769-8hiov01cujr38e22o83ar8vqno28nf6s.apps.googleusercontent.com',\n                scope:'email'\n            }).then(() => {\n                this.auth = window.gapi.auth2.getAuthInstance();\n                // this.setState({ isSignedIn : this.auth.isSignedIn.get() });\n                console.log(\"At Auth\");\n                this.onAuthChange(this.auth.isSignedIn.get());\n                this.auth.isSignedIn.listen(this.onAuthChange);\n            });\n        });\n    }\n\n    // onAuthChange = () => {\n    //     this.setState({ isSignedIn : this.auth.isSignedIn.get() })\n    // };\n\n\n    onAuthChange = (isSignedIn) => {\n        // this.setState({ isSignedIn : this.auth.isSignedIn.get() });\n        if (isSignedIn) {\n            this.props.signIn(this.auth.currentUser.get().getId());\n            // console.log(a.type);\n        } else {\n            this.props.signOut();\n            // console.log(a.type);\n        }\n    };\n\n\n    renderAuthButton() {\n        // if (this.state.isSignedIn === null){\n        //     return(\n        //         <div>I don't know</div>\n        //     );\n        // } else \n        if(this.props.isSignedIn === true){\n            return(\n                <button onClick={this.onSignOutClick} className=\"ui blue google button\">\n                    <i className=\"google icon\" />\n                        Sign Out\n                </button>\n            );\n        } else {\n            return(\n                <button onClick={this.onSignInClick} className=\"ui blue google button\">\n                    <i className=\"google icon\" />\n                        Sign in with Google\n                </button>\n            );\n        }\n    }\n\n\n    onSignInClick = () => {\n        this.auth.signIn();\n    };\n\n    onSignOutClick = () => {\n        this.auth.signOut();\n    };\n\n\n    render() {\n        return(\n            <div>\n                {this.renderAuthButton()}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isSignedIn : state.auth.isSignedIn\n    }\n}\n\n\nexport default connect(mapStateToProps, {signIn, signOut})(GoogleAuth);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport GoogleAuth from './GoogleAuth';\n\nconst Header = () => {\n    return(\n        <div className=\"ui secondary pointing menu\">\n            <Link to=\"/\" className=\"item\">\n                Streamy\n            </Link>\n            <div className=\"right menu\">\n                <Link to=\"/\" className=\"item\">\n                    All Streams\n                </Link>\n                <GoogleAuth />\n            </div>\n        </div>\n    );\n};\n\nexport default Header;","import React from 'react';\nimport {Router, Route} from 'react-router-dom';\nimport StreamCreate from './Streams/StreamCreate';\nimport StreamDelete from './Streams/StreamDelete';\nimport StreamEdit from './Streams/StreamEdit';\nimport StreamList from './Streams/StreamList';\nimport StreamShow from './Streams/StreamShow';\nimport Header from './Header';\nimport history from '../history';\n\n// const PageOne = () => {\n//     return(\n//         <div>PageOne<br></br>\n//             Bad Method !\n//             <Link to=\"/pagetwo\">Navigate to page 2</Link>\n//         </div>\n//     );\n// }\n\n// const PageTwo = () => {\n//     return(\n//         <div>PageTwo<br></br>\n//             <Link to=\"/\">Navigate to Page 1</Link>\n//             <button>Click Me !</button>\n//         </div>\n//     );\n// }\n\nconst App = () => {\n    return(\n        <div className=\"ui container\">\n            <Router history={history}>\n                <div>\n                    <Header />\n                    <Route path=\"/\" exact component={StreamList} />\n                    <Route path=\"/streams/new\" exact component={StreamCreate} />\n                    <Route path=\"/streams/edit/:id\" exact component={StreamEdit} />\n                    <Route path=\"/streams/delete/:id\" exact component={StreamDelete} />\n                    <Route path=\"/streams/show\" exact component={StreamShow} />\n                </div>\n            </Router>\n        </div>\n    );\n};\n\nexport default App;","import { SIGN_IN, SIGN_OUT } from '../actions/types';\n\nconst INITIAL_STATE = {\n    isSignedIn  : null,\n    userId : null\n};\n\nexport default (state = INITIAL_STATE, action) => {\n    switch (action.type){\n        case SIGN_IN :\n            return {...state, isSignedIn : true, userId : action.payload };\n        case SIGN_OUT :\n            return {...state, isSignedIn : false, userId : null };\n        default :\n            return state;\n    }\n};","import { combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\nimport authReducer from './authReducer';\nimport streamReducer from './streamReducer';\n\nexport default combineReducers({\n    auth : authReducer,\n    form : formReducer,\n    streams : streamReducer \n});","import _ from 'lodash';\nimport { CREATE_STREAM, FETCH_STREAM, FETCH_STREAMS, DELETE_STREAM, EDIT_STREAM } from '../actions/types';\n\nexport default (state={}, action) => {\n    switch(action.type){\n        case FETCH_STREAMS:\n            return {...state, ..._.mapKeys(action.payload, 'id')};\n        case FETCH_STREAM:\n            return {...state, [action.payload.id]: action.payload};\n        case CREATE_STREAM:\n            return {...state, [action.payload.id]: action.payload}; \n        case EDIT_STREAM:\n            return {...state, [action.payload.id]: action.payload};\n        case DELETE_STREAM:\n            return _.omit(state, action.payload); \n        default:\n            return state;\n    }\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst composeEnhansers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhansers(applyMiddleware(reduxThunk)));\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, \n    document.querySelector('#root')\n);"],"sourceRoot":""}